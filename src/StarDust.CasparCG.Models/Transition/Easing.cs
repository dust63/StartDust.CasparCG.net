
using System;
using System.Runtime.Serialization;

namespace StarDust.CasparCG.Models
{
    [Serializable]
    public enum Easing
    {
        [AMCPCommandValue("None")]
        [DataMember]
        None,
        [AMCPCommandValue("Linear")]
        [DataMember]
        Linear,
        [AMCPCommandValue("EaseNone")]
        [DataMember]
        EaseNone,
        [AMCPCommandValue("EaseInQuad")]
        [DataMember]
        EaseInQuad,
        [AMCPCommandValue("EaseOutQuad")]
        [DataMember]
        EaseOutQuad,
        [AMCPCommandValue("EaseInOutQuad")]
        [DataMember]
        EaseInOutQuad,
        [AMCPCommandValue("EaseOutInQuad")]
        [DataMember]
        EaseOutInQuad,
        [AMCPCommandValue("EaseInCubic")]
        [DataMember]
        EaseInCubic,
        [AMCPCommandValue("EaseOutCubic")]
        [DataMember]
        EaseOutCubic,
        [AMCPCommandValue("EaseInOutCubic")]
        [DataMember]
        EaseInOutCubic,
        [AMCPCommandValue("EaseOutInCubic")]
        [DataMember]
        EaseOutInCubic,
        [AMCPCommandValue("EaseInQuart")]
        [DataMember]
        EaseInQuart,
        [AMCPCommandValue("EaseOutQuart")]
        [DataMember]
        EaseOutQuart,
        [AMCPCommandValue("EaseInOutQuart")]
        [DataMember]
        EaseInOutQuart,
        [AMCPCommandValue("EaseOutInQuart")]
        [DataMember]
        EaseOutInQuart,
        [AMCPCommandValue("EaseInQuint")]
        [DataMember]
        EaseInQuint,
        [AMCPCommandValue("EaseOutQuint")]
        [DataMember]
        EaseOutQuint,
        [AMCPCommandValue("EaseInOutQuint")]
        [DataMember]
        EaseInOutQuint,
        [AMCPCommandValue("EaseOutInQuint")]
        [DataMember]
        EaseOutInQuint,
        [AMCPCommandValue("EaseInSine")]
        [DataMember]
        EaseInSine,
        [AMCPCommandValue("EaseOutSine")]
        [DataMember]
        EaseOutSine,
        [AMCPCommandValue("EaseInOutSine")]
        [DataMember]
        EaseInOutSine,
        [AMCPCommandValue("EaseOutInSine")]
        [DataMember]
        EaseOutInSine,
        [AMCPCommandValue("EaseInExpo")]
        [DataMember]
        EaseInExpo,
        [AMCPCommandValue("EaseOutExpo")]
        [DataMember]
        EaseOutExpo,
        [AMCPCommandValue("EaseOutExpo")]
        [DataMember]
        EaseInOutExpo,
        [AMCPCommandValue("EaseOutInExpo")]
        [DataMember]
        EaseOutInExpo,
        [AMCPCommandValue("EaseInCirc")]
        [DataMember]
        EaseInCirc,
        [AMCPCommandValue("EaseOutCirc")]
        [DataMember]
        EaseOutCirc,
        [AMCPCommandValue("EaseInOutCirc")]
        [DataMember]
        EaseInOutCirc,
        [AMCPCommandValue("EaseOutInCirc")]
        [DataMember]
        EaseOutInCirc,
        [AMCPCommandValue("EaseInElastic")]
        [DataMember]
        EaseInElastic,
        [AMCPCommandValue("EaseOutElastic")]
        [DataMember]
        EaseOutElastic,
        [AMCPCommandValue("EaseInOutElastic")]
        [DataMember]
        EaseInOutElastic,
        [AMCPCommandValue("EaseOutInElastic")]
        [DataMember]
        EaseOutInElastic,
        [AMCPCommandValue("EaseInBack")]
        [DataMember]
        EaseInBack,
        [AMCPCommandValue("EaseOutBack")]
        [DataMember]
        EaseOutBack,
        [AMCPCommandValue("EaseInOutBack")]
        [DataMember]
        EaseInOutBack,
        [AMCPCommandValue("EaseOutInBack")]
        [DataMember]
        EaseOutInBack,
        [AMCPCommandValue("EaseOutBounce")]
        [DataMember]
        EaseOutBounce,
        [AMCPCommandValue("EaseInBounce")]
        [DataMember]
        EaseInBounce,
        [AMCPCommandValue("EaseInOutBounce")]
        [DataMember]
        EaseInOutBounce,
        [AMCPCommandValue("EaseOutInBounce")]
        [DataMember]
        EaseOutInBounce,
    }
}
